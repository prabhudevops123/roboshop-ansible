#print_head "Removing Old Content"
#rm -rf /usr/share/nginx/html/* &>>${log_file}
#status_check $?
#
#print_head "Downloading Frontend Content"
#curl -o /tmp/frontend.zip https://roboshop-artifacts.s3.amazonaws.com/frontend.zip &>>${log_file}
#status_check $?
#
#print_head "Extracting Downloaded Frontend"
#cd /usr/share/nginx/html
#unzip /tmp/frontend.zip &>>${log_file}
#status_check $?
#
#print_head "Copying Nginx Config for RoboShop"
#cp ${code_dir}/configs/nginx-roboshop.conf /etc/nginx/default.d/roboshop.conf &>>${log_file}
#status_check $?
#
#print_head "Enabling nginx"
#systemctl enable nginx &>>${log_file}
#status_check $?
#
#print_head "Starting nginx"
#systemctl restart nginx &>>${log_file}
#status_check $?
#
#
### If any command is errored or failed, we need to stop the script
## Status of a command need to be printed.

- name: Install Nginx
  ansible.builtin.yum:
    name: nginx
    state: installed

- name: Remove old content
  ansible.builtin.file:
    path: /usr/share/nginx/html
    state: absent

- name: Create Application Directory
  ansible.builtin.file:
    path: /usr/share/nginx/html
    state: directory

- name: Download and Extract Frontend
  ansible.builtin.unarchive:
    src: https://roboshop-artifacts.s3.amazonaws.com/frontend.zip
    dest: /usr/share/nginx/html
    remote_src: yes

- name: Create RoboShop Config in Nginx
  ansible.builtin.copy:
    src: roboshop.conf
    dest: /etc/nginx/default.d/roboshop.conf

- name: Start Nginx Service
  ansible.builtin.systemd:
    name: nginx
    state: restarted
    enabled: yes
